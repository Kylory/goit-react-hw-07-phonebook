{"version":3,"sources":["components/ContactsList/ContactsList.module.css","components/ContactForm/ContactForm.module.css","components/SearchContacts/SearchContacts.module.css","APIServise/contactsAPI.js","redux/contacts/contactsOperations.js","redux/contacts/contactsReducer.js","redux/contacts/contactsSelectors.js","redux/store.js","components/ContactForm/ContactForm.jsx","components/ContactsList/ContactsList.jsx","components/SearchContacts/SearchContacts.jsx","App.js","index.js"],"names":["module","exports","BASE_URL","fetchContacts","a","axios","get","data","postContact","name","number","post","deleteContact","id","delete","DB_fetchContacts","createAsyncThunk","_","rejectWithValue","contactsAPI","contacts","DB_postContact","response","DB_deleteContact","addContact","createAction","payload","shortid","generate","filterContacts","contactsReducer","createReducer","contactsOperations","fulfilled","state","filter","contact","filterReducer","isLoadingReducer","pending","rejected","errorReducer","rootReducer","combineReducers","isLoading","error","getContacts","getFilter","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","includes","store","configureStore","reducer","ContactForm","useState","stateName","setStateName","stateNumber","setStateNumber","useSelector","contactsSelectors","dispatch","useDispatch","handleChange","e","target","value","reset","className","styles","contactForm","onSubmit","preventDefault","find","alert","type","onChange","ContactsList","filteredContacts","loading","useEffect","LoadingWrapper","message","map","onClick","deleteItem","SearchContacts","searchContacts","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d8d1df9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactsList\":\"ContactsList_ContactsList__2ydzu\",\"LoadingWrapper\":\"ContactsList_LoadingWrapper__1SB4h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__Lg1yF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchContacts\":\"SearchContacts_searchContacts__jFpz7\"};","import axios from 'axios';\r\n\r\nconst BASE_URL = 'http://localhost:3001/contacts';\r\n\r\nasync function fetchContacts() {\r\n  const { data } = await axios.get(`${BASE_URL}`);\r\n  return data;\r\n}\r\n\r\nasync function postContact(name, number) {\r\n  const { data } = await axios.post(`${BASE_URL}`, {\r\n    name: `${name}`,\r\n    number: `${number}`,\r\n  });\r\n  return data;\r\n}\r\n\r\nasync function deleteContact(id) {\r\n  await axios.delete(`${BASE_URL}/${id}`);\r\n  return id;\r\n}\r\n\r\nexport { fetchContacts, postContact, deleteContact };\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport * as contactsAPI from 'APIServise/contactsAPI';\r\nimport { createAction } from '@reduxjs/toolkit';\r\nimport shortid from 'shortid';\r\n\r\nexport const DB_fetchContacts = createAsyncThunk(\r\n  'contacts/fetchContacts',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const contacts = await contactsAPI.fetchContacts();\r\n      return contacts;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const DB_postContact = createAsyncThunk(\r\n  'contacts/postContact',\r\n  async ({ name, number }, { rejectWithValue }) => {\r\n    try {\r\n      const response = await contactsAPI.postContact(name, number);\r\n      return response;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const DB_deleteContact = createAsyncThunk(\r\n  'contacts/deleteContact',\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      const response = await contactsAPI.deleteContact(id);\r\n      return response;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const addContact = createAction(\r\n  'contactsList/addContact',\r\n  ({ name, number }) => ({\r\n    payload: {\r\n      id: shortid.generate(),\r\n      name: name,\r\n      number: number,\r\n    },\r\n  }),\r\n);\r\n\r\nexport const deleteContact = createAction('contacts/deleteContact');\r\n\r\nexport const filterContacts = createAction('contacts/filterContacts');\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { contactsOperations } from 'redux/contacts';\r\n\r\nconst contactsReducer = createReducer([], {\r\n  [contactsOperations.DB_fetchContacts.fulfilled]: (_, { payload }) => payload,\r\n  [contactsOperations.addContact]: (state, { payload }) => [...state, payload],\r\n  [contactsOperations.DB_postContact.fulfilled]: () => {},\r\n  [contactsOperations.deleteContact]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload),\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n  [contactsOperations.filterContacts]: (_, { payload }) => payload,\r\n});\r\n\r\nconst isLoadingReducer = createReducer(false, {\r\n  [contactsOperations.DB_fetchContacts.pending]: () => true,\r\n  [contactsOperations.DB_fetchContacts.fulfilled]: () => false,\r\n  [contactsOperations.DB_fetchContacts.rejected]: () => false,\r\n\r\n  [contactsOperations.DB_postContact.pending]: () => true,\r\n  [contactsOperations.DB_postContact.fulfilled]: () => false,\r\n  [contactsOperations.DB_postContact.rejected]: () => false,\r\n\r\n  [contactsOperations.DB_deleteContact.pending]: () => true,\r\n  [contactsOperations.DB_deleteContact.fulfilled]: () => false,\r\n  [contactsOperations.DB_deleteContact.rejected]: () => false,\r\n});\r\n\r\nconst errorReducer = createReducer(null, {\r\n  [contactsOperations.DB_fetchContacts.rejected]: (_, { payload }) => payload,\r\n  [contactsOperations.DB_fetchContacts.pending]: () => null,\r\n\r\n  [contactsOperations.DB_postContact.rejected]: (_, { payload }) => payload,\r\n  [contactsOperations.DB_postContact.pending]: () => null,\r\n\r\n  [contactsOperations.DB_deleteContact.rejected]: (_, { payload }) => payload,\r\n  [contactsOperations.DB_deleteContact.pending]: () => null,\r\n});\r\n\r\nexport const rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n  filter: filterReducer,\r\n  isLoading: isLoadingReducer,\r\n  error: errorReducer,\r\n});\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getContacts = state => state.contacts;\r\nconst getFilter = state => state.filter;\r\nconst isLoading = state => state.isLoading;\r\nconst error = state => state.error;\r\n\r\nconst getFilteredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    if (contacts && filter) {\r\n      const normalizedFilter = filter.toLowerCase();\r\n      const filteredContact = contacts.filter(contact =>\r\n        contact.name.toLowerCase().includes(normalizedFilter),\r\n      );\r\n\r\n      return filteredContact;\r\n    }\r\n    return contacts;\r\n  },\r\n);\r\n\r\nexport { getContacts, getFilter, getFilteredContacts, isLoading, error };\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { contactsReducer } from 'redux/contacts';\r\n\r\nconst store = configureStore({\r\n  reducer: contactsReducer.rootReducer,\r\n});\r\n\r\nexport default store;\r\n","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { contactsOperations, contactsSelectors } from 'redux/contacts';\r\nimport styles from './ContactForm.module.css';\r\n\r\nexport default function ContactForm() {\r\n  const [stateName, setStateName] = useState('');\r\n  const [stateNumber, setStateNumber] = useState('');\r\n\r\n  const contacts = useSelector(contactsSelectors.getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case 'name':\r\n        setStateName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setStateNumber(value);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (contacts && contacts.find(contact => contact.name === stateName)) {\r\n      return alert(stateName + ' is already in contacts');\r\n    } else if (!stateName) {\r\n      return alert('Type some name');\r\n    } else if (!stateNumber) {\r\n      return alert('Type some number');\r\n    }\r\n\r\n    dispatch(\r\n      contactsOperations.addContact({ name: stateName, number: stateNumber }),\r\n    );\r\n\r\n    (async () => {\r\n      await dispatch(\r\n        contactsOperations.DB_postContact({\r\n          name: stateName,\r\n          number: stateNumber,\r\n        }),\r\n      );\r\n      await dispatch(contactsOperations.DB_fetchContacts());\r\n    })();\r\n\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setStateName('');\r\n    setStateNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={styles.contactForm} onSubmit={handleSubmit}>\r\n      <label>\r\n        Name\r\n        <input\r\n          name=\"name\"\r\n          type=\"text\"\r\n          value={stateName}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n\r\n      <label>\r\n        Number\r\n        <input\r\n          name=\"number\"\r\n          type=\"text\"\r\n          value={stateNumber}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n\r\n      <button type=\"submit\">Add contact</button>\r\n    </form>\r\n  );\r\n}\r\n","import { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { contactsSelectors, contactsOperations } from 'redux/contacts';\r\nimport styles from './ContactsList.module.css';\r\n\r\nexport default function ContactsList() {\r\n  const filteredContacts = useSelector(contactsSelectors.getFilteredContacts);\r\n  const loading = useSelector(contactsSelectors.isLoading);\r\n  const error = useSelector(contactsSelectors.error);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(contactsOperations.DB_fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  async function deleteItem(id) {\r\n    dispatch(contactsOperations.deleteContact(id));\r\n    await dispatch(contactsOperations.DB_deleteContact(id));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.LoadingWrapper}>\r\n        {loading && <div>Сontact synchronization...</div>}\r\n        {error && <div>{error.message}, no conection to DB</div>}\r\n      </div>\r\n      <ul className={styles.ContactsList}>\r\n        {filteredContacts &&\r\n          filteredContacts.map(contact => (\r\n            <li key={contact.id}>\r\n              {contact.name}\r\n              {': '}\r\n              {contact.number}\r\n              <button\r\n                onClick={() => {\r\n                  deleteItem(contact.id);\r\n                }}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { contactsSelectors, contactsOperations } from 'redux/contacts';\r\nimport styles from './SearchContacts.module.css';\r\n\r\nexport default function SearchContacts() {\r\n  const filter = useSelector(contactsSelectors.getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <label className={styles.searchContacts}>\r\n      Find contacts by name\r\n      <input\r\n        name=\"filter\"\r\n        type=\"text\"\r\n        value={filter}\r\n        onChange={e =>\r\n          dispatch(contactsOperations.filterContacts(e.target.value))\r\n        }\r\n      />\r\n    </label>\r\n  );\r\n}\r\n","import ContactForm from './components/ContactForm/ContactForm';\r\nimport ContactsList from './components/ContactsList/ContactsList';\r\nimport SearchContacts from './components/SearchContacts/SearchContacts';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <h2>Phonebook</h2>\r\n      <ContactForm />\r\n      <h2>Contacts</h2>\r\n      <SearchContacts />\r\n      <ContactsList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nimport 'modern-normalize/modern-normalize.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}